// <auto-generated />
using System;
using HospitalDatabase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalDatabase.Migrations.Migrations
{
    [DbContext(typeof(HospitalContext))]
    partial class HospitalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Diagnose", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PatientId");

                    b.ToTable("Diagnose");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Doctor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            ID = new Guid("67bf17e0-3849-4989-8e58-c76939c86f4d"),
                            Email = "Leonel.Durgan56@yahoo.com",
                            Login = "DQYazNpCf4",
                            Name = "Ebony Gutmann",
                            Speciality = "unde"
                        },
                        new
                        {
                            ID = new Guid("0c4ca78d-b24a-47ba-a05b-498e1ce7ca85"),
                            Email = "Jane28@gmail.com",
                            Login = "L5byIzrZ91",
                            Name = "Rodolfo Rowe",
                            Speciality = "enim"
                        },
                        new
                        {
                            ID = new Guid("6387af7c-d16d-4d24-9528-afe8fd9f51d5"),
                            Email = "Winona88@hotmail.com",
                            Login = "8LcTvAFXcQ",
                            Name = "Geraldine Aufderhar",
                            Speciality = "est"
                        },
                        new
                        {
                            ID = new Guid("6c7a02ce-1baa-4e16-9b9b-c4afd4c42518"),
                            Email = "Randall_Kiehn@hotmail.com",
                            Login = "SQBxPjQybu",
                            Name = "Alexander Kiehn",
                            Speciality = "omnis"
                        },
                        new
                        {
                            ID = new Guid("1d392721-3895-4b16-838e-2c0c39432cec"),
                            Email = "Elroy.Koepp84@gmail.com",
                            Login = "UdGoqnDjTR",
                            Name = "Jody Morar",
                            Speciality = "delectus"
                        },
                        new
                        {
                            ID = new Guid("c87525a3-4646-4790-914f-b17eff2c9589"),
                            Email = "Sedrick64@gmail.com",
                            Login = "9j7wxTDzqg",
                            Name = "Johnnie Considine",
                            Speciality = "atque"
                        },
                        new
                        {
                            ID = new Guid("6cf23575-b8b4-4ebf-82c1-587983bdb826"),
                            Email = "Mauricio.Dicki@gmail.com",
                            Login = "9OJGqpmYAa",
                            Name = "Monique Runte",
                            Speciality = "quibusdam"
                        },
                        new
                        {
                            ID = new Guid("228adb73-7186-411c-a09f-52e2e1b924d9"),
                            Email = "Lora_Abernathy@gmail.com",
                            Login = "hgqBzf_bs2",
                            Name = "Keith King",
                            Speciality = "ipsum"
                        },
                        new
                        {
                            ID = new Guid("29d35cbd-801b-4c25-b48a-0aa1b74982a7"),
                            Email = "Giuseppe.Emmerich@hotmail.com",
                            Login = "J7aabFqxu6",
                            Name = "Darin Johnston",
                            Speciality = "aspernatur"
                        },
                        new
                        {
                            ID = new Guid("3b8eaea7-0f95-4fc6-af4f-167a35d23106"),
                            Email = "Nicholas94@yahoo.com",
                            Login = "mAdqE8iBGi",
                            Name = "Denise Friesen",
                            Speciality = "ut"
                        });
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Medicament", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Medics");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Patient", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("HasInsurance")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.PatientMedicament", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("MedicamentId");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientMedicaments");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Visitation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Visitations");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Diagnose", b =>
                {
                    b.HasOne("HospitalDatabase.DAL.Entities.Patient", "Patient")
                        .WithMany("Diagnoses")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.PatientMedicament", b =>
                {
                    b.HasOne("HospitalDatabase.DAL.Entities.Medicament", "Medicament")
                        .WithMany("Prescriptions")
                        .HasForeignKey("MedicamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalDatabase.DAL.Entities.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Visitation", b =>
                {
                    b.HasOne("HospitalDatabase.DAL.Entities.Doctor", "Doctor")
                        .WithMany("Visitations")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalDatabase.DAL.Entities.Patient", "Patient")
                        .WithMany("Visitations")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Doctor", b =>
                {
                    b.Navigation("Visitations");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Medicament", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("HospitalDatabase.DAL.Entities.Patient", b =>
                {
                    b.Navigation("Diagnoses");

                    b.Navigation("Prescriptions");

                    b.Navigation("Visitations");
                });
#pragma warning restore 612, 618
        }
    }
}
